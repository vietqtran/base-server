version: '3.8'

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - '${PORT}:${PORT}'
    environment:
      - PORT=${PORT}
      - APP_NAME=${APP_NAME}
      - MONGO_URI=${MONGO_URI}
      - REDIS_URL=${REDIS_URL}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRE_IN=${JWT_EXPIRE_IN}
      - JWT_REFRESH_SECRET=${JWT_REFRESH_SECRET}
      - JWT_REFRESH_EXPIRE_IN=${JWT_REFRESH_EXPIRE_IN}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_REGION=${AWS_REGION}
      - AWS_S3_BUCKET=${AWS_S3_BUCKET}
      - MAILER_HOST=${MAILER_HOST}
      - MAILER_USER=${MAILER_USER}
      - MAILER_FROM=${MAILER_FROM}
      - MAILER_PASSWORD=${MAILER_PASSWORD}
    networks:
      - app-network
    depends_on:
      - redis
    restart: unless-stopped
    healthcheck:
      test: ['CMD', 'wget', '--spider', '-q', 'http://localhost:${PORT}/health']
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:alpine
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - '${REDIS_PORT}:6379'
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  app-network:
    driver: bridge
